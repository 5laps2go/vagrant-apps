# -*- mode: ruby -*-
# vi: set ft=ruby :
#
# microk8s for centos8
#
require 'yaml'
settings = YAML.load_file('config.yml')

master_ip = "192.168.1.34"
join_token = SecureRandom.alphanumeric(32)
$configureMaster = <<-SHELL
  microk8s add-node -l 300 -t ${1}
SHELL
$configureWorker = <<-SHELL
  until microk8s join "${1}:25000/${2}"; do sleep 3; done
SHELL
$configureMicrok8s = <<SHELL
  # disable SELinux
  setenforce 0
  sed -i 's/^SELINUX=.*/SELINUX=permissive/g' /etc/selinux/config
  systemctl stop firewalld
  systemctl disable firewalld
# firewall-cmd  --permanent --add-port={10255,12379,25000,16443,10250,10257,10259,32000}/tcp
# firewall-cmd --reload
  # update server and install snap
  echo "max_parallel_downloads=10" >> /etc/dnf/dnf.conf
  echo "fastestmirror=true" >> /etc/dnf/dnf.conf
  dnf install epel-release -y
  dnf update
  dnf -y install snapd
  systemctl enable --now snapd.socket
  snap wait system seed.loaded
  ln -s /var/lib/snapd/snap /snap
  # snap install microk8s
  snap install microk8s --classic
  usermod -a -G microk8s vagrant
  chown -f -R vagrant /home/vagrant/.kube	# ??
  . .bashrc					# reset PATH env
  microk8s.status --wait-ready
  microk8s.enable dns dashboard registry
  # prepare kubectl for user
  snap alias microk8s.kubectl kubectl
SHELL

Vagrant.configure("2") do |config|
  config.ssh.forward_agent = true

  config.vm.synced_folder('.', '/vagrant', type: 'nfs', disabled: true)
  config.vm.synced_folder('.', '/Vagrantfiles', type: 'rsync', disabled: true)

  settings['nodes'].each do |node|
    config.vm.define node['hostname'] do |s|
      s.vm.box = settings['baseos']		# ノードのベースOSを指定
      s.vm.hostname = node['hostname']
      # ネットワークを指定 # pod-network-cidrと重ならないように注意
      # s.vm.network "private_network", ip: node['ip']

      s.vm.provider :vmware_esxi do |esxi|
        # 構築先のESXiの情報
        esxi.esxi_hostname = settings['esxi']['hostname']
        esxi.esxi_username = settings['esxi']['username']
        esxi.esxi_password = ENV['ESXI_PASSWD']||settings['esxi']['password']
        esxi.esxi_hostport = settings['esxi']['hostport']
        esxi.esxi_virtual_network = settings['esxi']['virtualnetworks']
        esxi.esxi_disk_store = settings['esxi']['diskstore']

        # 構築するVMの設定
        esxi.guest_name = node['hostname']
        esxi.clone_from_vm = settings['cloneos']
        esxi.guest_guestos = settings['os_type'] 
        esxi.guest_username = settings['guest_user']
        esxi.guest_memsize = node['memory']
        esxi.guest_numvcpus = node['cpus']
        esxi.guest_disk_type = node['disk_type']
        esxi.guest_boot_disk_size = node['disk_size']
        esxi.local_allow_overwrite = 'True'
      end

      # 共通のプロビジョニング(as root)
      s.vm.provision "shell", inline: $configureMicrok8s

      if node['type'] == "control-plane" then
        # Contril Plane Node のプロビジョニング
        s.vm.provision "shell", inline: $configureMaster, args: [join_token]
      else
        # Worker Node のプロビジョニング
        s.vm.provision "shell", inline: $configureWorker, args: [master_ip, join_token]
      end
    end
  end
end

