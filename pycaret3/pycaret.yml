---
- name: configure pycaret jupyter server with nginx reverse proxy
  hosts: pycaret_server
  become: true
  user: vagrant
  vars_files:
    - inventories/common/vars/nginx-config.yml
    - inventories/dev/vars/pycaret.yml
  vars:
    python3_version: 3.11.2

  tasks:
    - name: Install NGINX
      ansible.builtin.include_role:
        name: '{{ roleinputvar }}'
      loop:
        - nginxinc.nginx
        - nginxinc.nginx_config
      loop_control:
        loop_var: roleinputvar
    - import_tasks: ./tasks/nginx_htpasswd.yml
    - name: install jupyter notebook systemd unit file
      template:
        src: inventories/common/conf/jupyter.service.j2
        dest: /etc/systemd/system/jupyter.service
    - name: install mlflow systemd unit file
      template:
        src: inventories/common/conf/mlflow.service.j2
        dest: /etc/systemd/system/mlflow.service
    - name: ensures .jupyter dir exists
      file: path=/home/vagrant/.jupyter state=directory
      become: yes
      become_user: vagrant
    - name: set jupyter notebook customize json
      template:
        src: inventories/dev/conf/jupyter_server_config.json
        dest: /home/vagrant/.jupyter/jupyter_server_config.json
      become: yes
      become_user: vagrant

    - name: change python interpreter
      set_fact: ansible_python_interpreter=/home/vagrant/.pyenv/shims/python
    - name: upgrade pip, force upgrade
      pip:
        name: pip
        state: latest
      become: yes
      become_user: vagrant
    - name: install pycaret and jupyterlab (pandavro for avro, m2cgen for pycaret model to python)
      pip:
        name: pycaret==3.3.2,optuna,mlflow,jupyterlab,pandavro,japanize_matplotlib,seaborn,pandas_profiling
        executable: pip
      become: yes
      become_user: vagrant
#    - name: install gpu based lightgbm to remove lightgbm
#      ansible.builtin.command: pip uninstall lightgbm --yes
#      become: yes
#      become_user: vagrant
#    - name: install gpu based lightgbm to install lightgbm
#      ansible.builtin.command: pip install lightgbm --no-binary lightgbm --no-cache lightgbm --config-settings=cmake.define.USE_CUDA=ON
#      become: yes
#      become_user: vagrant
#      args:
#        creates: /home/vagrant/.vagrant.d/gems/3.3.8/gems/vagrant-vmware-esxi-2.5.5

    - name: start the jupyter service
      systemd:
        name: jupyter.service
        state: started
        daemon_reload: yes
        enabled: yes
    - name: start the mlflow service
      systemd:
        name: mlflow.service
        state: started
        daemon_reload: yes
        enabled: yes
    - name: enable https port
      ansible.posix.firewalld:
        service: https
        state: enabled
        permanent: true
        immediate: true
        offline: true

  pre_tasks:
    - name: set modprobe.d/blacklist.conf for Redhat8(AlmaLinux8) to avoid 'Host SMBus controller not enabled!' and ouveau mmio error
      template:
        src: inventories/common/conf/modprobe.d/blacklist.conf
        dest: /etc/modprobe.d/blacklist.conf
    - name: install packages for nginxinc.nginx
      package:
        name: patch,pcre2,policycoreutils-python-utils
        state: present
    - name: install packages for python
      package:
        name: xz-devel,git
        state: present

  roles:
    - role: staticdev.pyenv
      pyenv_path: /home/vagrant/.pyenv
      pyenv_owner: vagrant
      pyenv_global: ["{{ python3_version }}"]
      pyenv_python_versions: ["{{ python3_version }}"]
      pyenv_virtualenvs: [{ venv_name: "latest", py_version: "{{ python3_version }}" }]

